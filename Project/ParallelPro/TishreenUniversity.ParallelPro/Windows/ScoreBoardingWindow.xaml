<Window x:Class="TishreenUniversity.ParallelPro.Windows.ScoreBoardingWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TishreenUniversity.ParallelPro"
        xmlns:converter="clr-namespace:TishreenUniversity.ParallelPro.IValueConverters"
        xmlns:controls="clr-namespace:TishreenUniversity.ParallelPro.Controls"
        mc:Ignorable="d" WindowState="Maximized" Tag="AppWindow"
        xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
        Title="ScoreBoarding"
        Closing="Window_Closing">
    <ScrollViewer BorderBrush="Red">
        <Grid >
            
            <Grid Margin="15 0" >
                <Grid.RowDefinitions>
                    <!--Clock cycles-->
                    <RowDefinition Height="auto"/>
                    <!--The instruction status-->
                    <RowDefinition Height="auto"/>
                    <!--The Functional unit status  -->
                    <RowDefinition Height="auto"/>
                    <!--The Register result status-->
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <!--#region Clock cycles-->
                <Grid Margin="0 10" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Clock Cycle : " Style="{StaticResource DarkHeader}" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                    <TextBlock Style="{StaticResource HeaderText}" FontSize="{StaticResource FontSizeExtraLarg}" FontWeight="Bold" Text="{Binding ClockCycle}" Grid.Column="1"  Foreground="Black"/>

                    <Grid Grid.Column="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Button
                            x:Name="NextCycleButton"
                            Visibility="{Binding Source={x:Static local:ViewModelLocator.ApplicationViewModel},Path=IsExamMode,Converter={converter:BooleanToVisibilityValueConverter},ConverterParameter=True}"
                            IsEnabled="{Binding CanGoNextCycle}" Command="{Binding ScoreBoardOneCycleCommand}" Tag="Next" Grid.Column="0" Style="{StaticResource RegularButton}"/>
                        <Button 
                            Visibility="{Binding ElementName=NextCycleButton,Path=Visibility}"
                            IsEnabled="{Binding CanGoNextCycle}" Tag="To end" Grid.Column="1" Command="{Binding ScoreBoardTillEndCommand}" Style="{StaticResource RegularButton}" Background="Black" />
                        <!--#region Exam Buttons-->
                        <Button
                            x:Name="nextExambutton"
                            Visibility="{Binding ElementName=NextCycleButton,Path=Visibility,Converter={converter:FlipVisibilityValueConverter}}"
                            Tag="Next Test" 
                            Grid.Column="2"
                            Click="NextExambutton_Click"
                            Command="{Binding CorrectExamAndMoveToNextCommand}" 
                            Style="{StaticResource RegularButton}" 
                            Background="Red" />
                        <Button
                            Visibility="{Binding ElementName=nextExambutton,Path=Visibility}"
                            Tag="Delete and go next Test" 
                            Grid.Column="3"
                            Click="CheckPasswordForRest_Click"
                            Style="{StaticResource RegularButton}" 
                            Background="Red" />
                        <Button 
                            Visibility="{Binding ElementName=nextExambutton,Path=Visibility}"
                            Tag="Finished" 
                            Grid.Column="4" 
                            Command="{Binding CorrectExamAndEndCommand}" 
                            Style="{StaticResource RegularButton}" 
                            Background="Red" />
                        <!--#endregion-->
                        <Button 
                            Height="50"
                            Width="50"
                            Tag="{StaticResource Info_Circle}" Grid.Column="5" Command="{Binding ShowEnteredInformationCommand}"
                            Style="{StaticResource BaseIconButton}" Background="Black" />

                    </Grid>


                </Grid>
                <!--#endregion-->
                <!--Instruction status-->
                <controls:InstructionStatusControl  x:Name="Instructions" Grid.Row="1" Margin="10"/>

                <!--Functional units status-->
                <controls:FunctionalUnitStatusControl Margin="{Binding ElementName=Instructions,Path=Margin}" Grid.Row="2"/>

                <!--Registers units status-->
                <controls:RegisterResultStatusControl Margin="{Binding ElementName=Instructions,Path=Margin}" Grid.Row="3"/>
            </Grid>
            <!--Instructions status-->
            <controls:ChooseFunctionalUnitsScoreBoard Visibility="Collapsed" />

            <!--Hover over menu to enter a password for exit-->
            <Grid x:Name="CheckForConformationControl" Visibility="Collapsed">
                <Border Background="{StaticResource  BackgroundDarkBrush}" Opacity="0.95"/>
                <Border x:Name="PasswordCheck" >
                    <StackPanel HorizontalAlignment="Center" 
                        VerticalAlignment="Center">
                        <PasswordBox Style="{StaticResource RegularPasswordBox}" Width="300" x:Name="TeacherPassword" metro:TextBoxHelper.Watermark="Enter Password"/>
                        <Button Content="Check and exit" Click="CheckAndExitClick"/>
                        <Button Content="Back" Margin="0 5" Click="BackButton_Click"/>

                    </StackPanel>
                </Border>
            </Grid>

        </Grid>
    </ScrollViewer>
</Window>
    